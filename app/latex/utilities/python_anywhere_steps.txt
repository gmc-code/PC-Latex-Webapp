
Remove using powershell the pycache:
Get-ChildItem -Recurse -Directory -Filter "__pycache__" | Remove-Item -Recurse -Force


Uploading a GitHub repository to PythonAnywhere involves cloning the repository to your PythonAnywhere account. Here's how you can do it:

### Step 1: Log in to PythonAnywhere
1. Visit [PythonAnywhere](https://www.pythonanywhere.com/) and log in to your account.

---

### Step 2: Open a Bash Console
1. Navigate to the **"Consoles"** tab.
2. Start a **Bash** console.

---

### Step 3: Clone the GitHub Repository
1. In your GitHub repository, click the green **"Code"** button and copy the HTTPS or SSH URL of the repo (e.g., `https://github.com/username/repo.git`).
2. In the Bash console, type the following command to clone the repo:
   ```bash
   git clone https://github.com/username/repo.git
   ```
   Replace `https://github.com/username/repo.git` with your repository's URL.

   This will copy the repository into your PythonAnywhere home directory.

---

### Step 4: Navigate to the Cloned Directory
1. After cloning, navigate to the repository folder:
   ```bash
   cd repo
   ```
   Replace `repo` with the name of your repository.

---

### Step 5: Set Up a Virtual Environment (Optional but Recommended)
1. Create a virtual environment for your project:
   ```bash
   python3 -m venv venv
   ```
2. Activate the virtual environment:
   ```bash
   source venv/bin/activate
   ```
3. Install the required dependencies:
   ```bash
   pip install -r requirements.txt
   ```

---

### Step 6: Set Up a Web App (If Applicable)
If the repository contains a web application (e.g., a Flask or Django app), follow these steps:

1. Go to the **"Web"** tab in PythonAnywhere.
2. Click **"Add a new web app"**.
3. Follow the prompts to configure your web app (e.g., choose Flask/Django, Python version, etc.).
4. Update the WSGI configuration file to point to your app.
   - You can edit the WSGI file under the **"Web"** tab.
   - Add the path to your repository and virtual environment.

---

### Step 7: Test Your Application
1. Run your application or scripts to ensure they work correctly.
2. Use the **"Files"** tab to view/edit files if needed.

---

### Additional Tips
- If the repository is private, youâ€™ll need to use SSH or generate a personal access token on GitHub for authentication.
- Use the **"Tasks"** tab in PythonAnywhere to schedule periodic tasks if required.
